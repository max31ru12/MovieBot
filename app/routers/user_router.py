from aiogram import Router, F
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State
from aiogram.types import Message

from app.config import bot, CHANNEL_ONE_ID, MOVIE_CHANNEL_ID
from app.keyboards.user_keyboard import (
    channels_to_subscribe_user_menu,
    base_user_menu,
    already_subscribed_user_menu,
    cancel_movie_user_menu,
)
from app.routers.helpers.general import forward_movie_message
from app.utils import check_subscription

router = Router()


class GetMovieName(StatesGroup):
    waiting_for_code = State()


@router.message(F.text == "–£–∑–Ω–∞—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞")
async def get_movie_name(message: Message, state: FSMContext):
    user_id = message.from_user.id
    access = await check_subscription(
        bot, user_id, CHANNEL_ONE_ID
    ) and await check_subscription(bot, user_id, MOVIE_CHANNEL_ID)

    if access:
        await message.answer("–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ —Ñ–∏–ª—å–º–∞", reply_markup=cancel_movie_user_menu)
        await state.set_state(GetMovieName.waiting_for_code)
    else:
        await message.answer(
            "–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞ –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–µ –∫–∞–Ω–∞–ª—ã",
            reply_markup=channels_to_subscribe_user_menu,
        )
        return


@router.message(GetMovieName.waiting_for_code)
async def process_user_input_code(message: Message, state: FSMContext):
    if message.text == "–û—Ç–º–µ–Ω–∏—Ç—å –≤–≤–æ–¥ —Ñ–∏–ª—å–º–∞":
        await state.clear()
        await message.answer("–í–≤–æ–¥ —Ñ–∏–ª—å–º–∞ –æ—Ç–º–µ–Ω–µ–Ω", reply_markup=base_user_menu)
        return

    await forward_movie_message(bot, message, cancel_movie_user_menu)


@router.message(F.text == "–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª—ã")
async def show_subscribe_info(message: Message):
    await message.answer(
        "–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞ –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–µ –∫–∞–Ω–∞–ª—ã",
        reply_markup=channels_to_subscribe_user_menu,
    )

    await message.answer("–£–∂–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã?", reply_markup=already_subscribed_user_menu)


@router.message(F.text == "–Ø –ø–æ–¥–ø–∏—Å–∞–ª—Å—è")
async def process_already_subscribed(message: Message):
    await message.answer("–û—Ç–ª–∏—á–Ω–æ!", reply_markup=base_user_menu)


@router.message(F.text == "–û—Ç–º–µ–Ω–∏—Ç—å –≤–≤–æ–¥ —Ñ–∏–ª—å–º–∞")
async def cancel(message: Message, state: FSMContext):
    current_state = await state.get_state()
    if current_state is None:
        await message.answer(
            "–ù–µ—á–µ–≥–æ –æ—Ç–º–µ–Ω—è—Ç—å. –í—ã –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è.",
            reply_markup=base_user_menu,
        )
        return

    await state.clear()
    await message.answer("üö´ –ü–æ–ª—É—á–µ–Ω–∏–µ —Ñ–∏–ª—å–º–∞ –æ—Ç–º–µ–Ω–µ–Ω–æ.", reply_markup=base_user_menu)
